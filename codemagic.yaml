workflows:
  # üçé iOS Workflow - Complete Firebase + OneSignal
  ios-workflow:
    name: Gavra Bus iOS Build (Firebase + OneSignal)
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        APP_ID: com.gavra.gavra013
        BUNDLE_ID: com.gavra.gavra013
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        SKIP_FIREBASE: "false"
        # OneSignal App ID
        ONESIGNAL_APP_ID: "4fd57af1-568a-45e0-a737-3b3918c4e92a"
    scripts:
      - name: Set up app signing
        script: |
          set -ex
          echo "üçé App signing will be configured later"
          
      - name: Verify iOS Firebase configuration
        script: |
          echo "üî• Checking Firebase iOS configuration..."
          if [ -f ios/Runner/GoogleService-Info.plist ]; then
            echo "‚úÖ GoogleService-Info.plist found"
            plutil -p ios/Runner/GoogleService-Info.plist | head -10
          else
            echo "‚ùå GoogleService-Info.plist not found!"
            exit 1
          fi
          
      - name: Verify iOS Firebase Service
        script: |
          echo "üî• Checking Firebase Service iOS implementation..."
          if [ -f lib/services/firebase_service_ios.dart ]; then
            echo "‚úÖ Firebase Service iOS found"
            head -20 lib/services/firebase_service_ios.dart
          else
            echo "‚ùå Firebase Service iOS missing!"
            exit 1
          fi
          
      - name: Verify iOS Audio Assets
        script: |
          echo "üîä Checking iOS audio assets..."
          if [ -f ios/Runner/Sounds/gavra.mp3 ]; then
            echo "‚úÖ iOS audio asset found"
            ls -la ios/Runner/Sounds/
          else
            echo "‚ùå iOS audio asset missing!"
            exit 1
          fi
          
      - name: Get Flutter packages
        script: |
          echo "üì¶ Getting Flutter packages..."
          flutter clean
          flutter pub get
          
      - name: Clean and install CocoaPods dependencies
        script: |
          echo "üçÉ Installing CocoaPods dependencies..."
          cd ios
          rm -rf Pods
          rm -f Podfile.lock
          pod cache clean --all || true
          pod deintegrate || true
          cd ..
          flutter clean
          flutter pub get
          cd ios
          pod install --repo-update --verbose
          
      - name: Verify iOS Build Configuration
        script: |
          echo "‚öôÔ∏è Verifying iOS build configuration..."
          cd ios
          # Check Info.plist for permissions
          if grep -q "NSLocationWhenInUseUsageDescription" Runner/Info.plist; then
            echo "‚úÖ Location permissions configured"
          else
            echo "‚ùå Location permissions missing!"
          fi
          
          # Check for Firebase configuration
          if grep -q "FirebaseApp.configure" Runner/AppDelegate.swift; then
            echo "‚úÖ Firebase configured in AppDelegate"
          else
            echo "‚ùå Firebase not configured in AppDelegate!"
          fi
          
      - name: Flutter build iOS (Release)
        script: |
          echo "üöÄ Building iOS app with Firebase + OneSignal..."
          flutter build ios --release --no-codesign \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER \
            --verbose
            
      - name: Create iOS Archive
        script: |
          echo "üì¶ Creating iOS archive..."
          cd ios
          xcodebuild -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath build/Runner.xcarchive \
            archive \
            CODE_SIGNING_ALLOWED=NO
            
    artifacts:
      - build/ios/ipa/*.ipa
      - ios/build/Runner.xcarchive
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
      
    publishing:
      email:
        recipients:
          - gavra.bus@example.com
        notify:
          success: true
          failure: true
      slack:
        channel: '#gavra-builds'
        notify_on_build_start: true
        notify:
          success: true
          failure: true
      
  # ü§ñ Android Workflow - Complete Firebase + OneSignal  
  android-workflow:
    name: Gavra Bus Android Build (Firebase + OneSignal)
    max_build_duration: 60
    instance_type: linux_x2
    environment:
      flutter: stable
      vars:
        ONESIGNAL_APP_ID: "4fd57af1-568a-45e0-a737-3b3918c4e92a"
    scripts:
      - name: Verify Android Firebase configuration
        script: |
          echo "üî• Checking Firebase Android configuration..."
          if [ -f android/app/google-services.json ]; then
            echo "‚úÖ google-services.json found"
          else
            echo "‚ùå google-services.json not found!"
            exit 1
          fi
          
      - name: Verify Android Permissions
        script: |
          echo "üì± Checking Android permissions..."
          if grep -q "ACCESS_FINE_LOCATION" android/app/src/main/AndroidManifest.xml; then
            echo "‚úÖ Location permissions configured"
          else
            echo "‚ùå Location permissions missing!"
          fi
          
          if grep -q "onesignal_app_id" android/app/src/main/AndroidManifest.xml; then
            echo "‚úÖ OneSignal configured"
          else
            echo "‚ùå OneSignal not configured!"
          fi
          
      - name: Get Flutter packages  
        script: |
          flutter clean
          flutter pub get
          
      - name: Flutter build APK (Release)
        script: |
          echo "üöÄ Building Android app with Firebase + OneSignal..."
          flutter build apk --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER
            
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
      - flutter_drive.log
      
    publishing:
      email:
        recipients:
          - gavra.bus@example.com
        notify:
          success: true
          failure: true
