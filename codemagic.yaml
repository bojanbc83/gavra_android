workflows:
  ios-workflow:
    name: Gavra Bus iOS Build (Codemagic Auto-Signing)
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        APP_ID: com.gavra.gavra013
        BUNDLE_ID: com.gavra.gavra013
        APPLE_TEAM_ID: "6CY9Q44KMQ"
        APP_STORE_CONNECT_ISSUER_ID: "d8b50e72-6330-401d-9aef-4ead356405ca"
        APP_STORE_CONNECT_KEY_IDENTIFIER: "F4P3BUR78G"
        APP_STORE_CONNECT_PRIVATE_KEY: $APP_STORE_CONNECT_PRIVATE_KEY
        APPLE_ISSUER_ID: "d8b50e72-6330-401d-9aef-4ead356405ca"
        APPLE_KEY_ID: "L5CZWBQU22"
        APPLE_PRIVATE_KEY: $APPLE_PRIVATE_KEY
        APP_STORE_CONNECT_ISSUER_ID: "d8b50e72-6330-401d-9aef-4ead356405ca"
        APP_STORE_CONNECT_KEY_IDENTIFIER: "F4P3BUR78G"
        APP_STORE_CONNECT_PRIVATE_KEY: $APP_STORE_CONNECT_PRIVATE_KEY
        APPLE_ISSUER_ID: "d8b50e72-6330-401d-9aef-4ead356405ca"
        APPLE_KEY_ID: "L5CZWBQU22"
        APPLE_PRIVATE_KEY: $APPLE_PRIVATE_KEY
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: main
          include: true
          source: true
      tag_patterns:
        - pattern: 'v*'
          include: true
    scripts:
      - name: Verify Apple Developer credentials
        script: |
          #!/bin/bash
          set -e
          echo "Verifying Apple Developer Portal and App Store Connect credentials..."
          
          # Check environment variables
          if [ -z "$APP_STORE_CONNECT_PRIVATE_KEY" ]; then
            echo "❌ Missing APP_STORE_CONNECT_PRIVATE_KEY!"
            exit 1
          fi
          
          if [ -z "$APPLE_PRIVATE_KEY" ]; then
            echo "❌ Missing APPLE_PRIVATE_KEY!"
            exit 1
          fi
          
          echo "✅ APP_STORE_CONNECT_KEY_IDENTIFIER: $APP_STORE_CONNECT_KEY_IDENTIFIER"
          echo "✅ APP_STORE_CONNECT_ISSUER_ID: $APP_STORE_CONNECT_ISSUER_ID"
          echo "✅ APPLE_KEY_ID: $APPLE_KEY_ID"
          echo "✅ APPLE_TEAM_ID: $APPLE_TEAM_ID"
          echo "✅ BUNDLE_ID: $BUNDLE_ID"
          
          # Save Apple credentials as temp files for Codemagic to use
          echo "$APP_STORE_CONNECT_PRIVATE_KEY" > /tmp/app_store_connect_key.p8
          echo "$APPLE_PRIVATE_KEY" > /tmp/apple_developer_key.p8
          
          echo "✅ Apple credentials verified and saved"
          
      - name: Set build number
        script: |
          #!/bin/bash
          set -e
          export BUILD_NUMBER=${BUILD_NUMBER:-$(($(date +%s) / 60))}
          echo "Build number: $BUILD_NUMBER"
          
      - name: Check environment
        script: |
          echo "Flutter version:"
          flutter --version
          echo "Xcode version:"
          xcodebuild -version
          echo "CocoaPods version:"
          pod --version
          
      - name: Verify Firebase configuration
        script: |
          echo "Checking Firebase iOS configuration..."
          if [ -f ios/Runner/GoogleService-Info.plist ]; then
            echo "✅ GoogleService-Info.plist found"
            # Show bundle ID from Firebase config
            FIREBASE_BUNDLE_ID=$(plutil -p ios/Runner/GoogleService-Info.plist | grep BUNDLE_ID | cut -d'"' -f4)
            echo "Firebase Bundle ID: $FIREBASE_BUNDLE_ID"
            if [ "$FIREBASE_BUNDLE_ID" = "$BUNDLE_ID" ]; then
              echo "✅ Firebase Bundle ID matches project Bundle ID"
            else
              echo "⚠️ Firebase Bundle ID mismatch!"
            fi
          else
            echo "❌ GoogleService-Info.plist not found!"
            exit 1
          fi
          
      - name: Get Flutter packages
        script: |
          flutter clean
          flutter pub get
          
      - name: Install CocoaPods dependencies
        script: |
          cd ios
          rm -rf Pods Podfile.lock
          pod install --repo-update
          cd ..
          
      - name: Configure iOS project for automatic signing
        script: |
          cd ios
          
          echo "Configuring iOS project for AUTOMATIC signing..."
          
          # Force AUTOMATIC code signing in all configurations
          sed -i.bak 's/CODE_SIGN_STYLE = Manual;/CODE_SIGN_STYLE = Automatic;/g' Runner.xcodeproj/project.pbxproj || true
          sed -i.bak 's/CODE_SIGN_STYLE = "Manual";/CODE_SIGN_STYLE = "Automatic";/g' Runner.xcodeproj/project.pbxproj || true
          
          # Set development team
          if ! grep -q "DEVELOPMENT_TEAM = 6CY9Q44KMQ" Runner.xcodeproj/project.pbxproj; then
            echo "Adding DEVELOPMENT_TEAM to project.pbxproj"
            sed -i.bak 's/PRODUCT_BUNDLE_IDENTIFIER = com.gavra.gavra013;/&\'$'\n\t\t\t\tDEVELOPMENT_TEAM = 6CY9Q44KMQ;/g' Runner.xcodeproj/project.pbxproj
          fi
          
          # Remove any manual signing remnants
          sed -i.bak '/PROVISIONING_PROFILE_SPECIFIER/d' Runner.xcodeproj/project.pbxproj || true
          sed -i.bak '/PROVISIONING_PROFILE =/d' Runner.xcodeproj/project.pbxproj || true
          sed -i.bak '/CODE_SIGN_IDENTITY = "iPhone Distribution"/d' Runner.xcodeproj/project.pbxproj || true
          
          # Verify settings
          echo "Current signing configuration:"
          grep -A2 -B2 "CODE_SIGN_STYLE" Runner.xcodeproj/project.pbxproj || echo "No CODE_SIGN_STYLE found"
          grep -A2 -B2 "DEVELOPMENT_TEAM" Runner.xcodeproj/project.pbxproj || echo "No DEVELOPMENT_TEAM found"
          
          echo "✅ iOS project configured for AUTOMATIC signing"
          cd ..
          
      - name: Build iOS app with automatic signing
        script: |
          echo "Building iOS app with AUTOMATIC signing..."
          
          # Try building with explicit signing identity first
          flutter build ipa \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER \
            --export-method=app-store \
            --dart-define=APPLE_TEAM_ID=6CY9Q44KMQ
            
          # Verify IPA was created
          if [ -f "build/ios/ipa/Runner.ipa" ]; then
            echo "✅ IPA build successful!"
            ls -la build/ios/ipa/Runner.ipa
            
            # Show signing identity used
            codesign -dv build/ios/ipa/Runner.ipa 2>&1 | head -10 || true
          else
            echo "❌ IPA build failed!"
            echo "Checking for any IPA files..."
            find . -name "*.ipa" -type f 2>/dev/null || echo "No IPA files found anywhere"
            
            echo "Checking iOS build outputs..."
            ls -la build/ios/ 2>/dev/null || echo "No build/ios directory"
            exit 1
          fi
            
    artifacts:
      - build/ios/ipa/Runner.ipa
      - "**/*.ipa"
      
    publishing:
      email:
        recipients:
          - gavriconi19@gmail.com
        notify:
          success: true
          failure: true

  android-workflow:
    name: Gavra Bus Android Build
    max_build_duration: 60
    instance_type: linux_x2
    environment:
      flutter: stable
      vars:
        ONESIGNAL_APP_ID: "4fd57af1-568a-45e0-a737-3b3918c4e92a"
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: main
          include: true
          source: true
      tag_patterns:
        - pattern: 'v*'
          include: true
    scripts:
      - name: Get Flutter packages  
        script: |
          flutter clean
          flutter pub get
          
      - name: Build Android APK
        script: |
          flutter build apk --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER
            
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
      
    publishing:
      email:
        recipients:
          - gavriconi19@gmail.com
        notify:
          success: true
          failure: true
