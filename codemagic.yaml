workflows:
  # ðŸŽ iOS Workflow - Complete Firebase + OneSignal
  ios-workflow:
    name: Gavra Bus iOS Build (Firebase + OneSignal)
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        APP_ID: com.gavra013.gavraAndroid
        BUNDLE_ID: com.gavra013.gavraAndroid
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        SKIP_FIREBASE: "false"
        # iOS Code Signing - AUTOMATIC
        PRODUCT_BUNDLE_IDENTIFIER: "com.gavra013.gavraAndroid"
        # OneSignal App ID
        ONESIGNAL_APP_ID: "4fd57af1-568a-45e0-a737-3b3918c4e92a"
        # ðŸŽ Apple Developer Account - Bojan Gavrilovic
        APPLE_TEAM_ID: "6CY9Q44KMQ"              # Team ID iz Apple Developer Account
        
        # ðŸ”‘ App Store Connect API (za TestFlight upload) - BOJAN'S DATA
        APP_STORE_CONNECT_ISSUER_ID: "d8b50e72-6330-401d-9aef-4ead356405ca"
        APP_STORE_CONNECT_KEY_IDENTIFIER: "F4P38UR78G"
        APP_STORE_CONNECT_PRIVATE_KEY: |
          -----BEGIN PRIVATE KEY-----
          MIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgAZLtV2UfGC1YX7Qz
          wA1/rcwGkbHpX9ypDpgKApE0XvOgCgYIKoZIzj0DAQehRANCAAQvHPQ+kA1n8LmD
          wP1P9is1qe+t5KYkJ2aQZXCxHYsKiQcDjfEoTUHeEdQDm5g3BUzI3+vXBIlcradD
          /dpdkMZv
          -----END PRIVATE KEY-----
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: develop
          include: true
          source: true
      tag_patterns:
        - pattern: 'v*'
          include: true
    scripts:
      - name: Verify iOS Code Signing Setup
        script: |
          echo "ðŸ“‹ Checking iOS code signing setup..."
          echo "Available certificates in keychain:"
          security find-identity -v -p codesigning || true
          echo ""
          echo "Available provisioning profiles:"
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/ || true
          echo ""
          echo "Team ID: $APPLE_TEAM_ID"
          
      - name: Verify iOS Firebase configuration
        script: |
          echo "ðŸ”¥ Checking Firebase iOS configuration..."
          if [ -f ios/Runner/GoogleService-Info.plist ]; then
            echo "âœ… GoogleService-Info.plist found"
            plutil -p ios/Runner/GoogleService-Info.plist | head -10
          else
            echo "âŒ GoogleService-Info.plist not found!"
            exit 1
          fi
          
      - name: Verify iOS Audio Assets
        script: |
          echo "ðŸ”Š Checking iOS audio assets..."
          if [ -f assets/gavra.mp3 ]; then
            echo "âœ… iOS audio asset found"
            ls -la assets/
          else
            echo "âŒ iOS audio asset missing!"
            exit 1
          fi
          
      - name: Get Flutter packages
        script: |
          echo "ðŸ“¦ Getting Flutter packages..."
          flutter clean
          flutter pub get
          
      - name: Clean and install CocoaPods dependencies
        script: |
          echo "ðŸƒ Installing CocoaPods dependencies..."
          cd ios
          rm -rf Pods
          rm -f Podfile.lock
          pod cache clean --all || true
          pod deintegrate || true
          cd ..
          flutter clean
          flutter pub get
          cd ios
          pod install --repo-update --verbose
          
      - name: Verify iOS Build Configuration
        script: |
          echo "âš™ï¸ Verifying iOS build configuration..."
          cd ios
          # Check Info.plist for permissions
          if grep -q "NSLocationWhenInUseUsageDescription" Runner/Info.plist; then
            echo "âœ… Location permissions configured"
          else
            echo "âŒ Location permissions missing!"
          fi
          
          # Check for Firebase configuration
          if grep -q "FirebaseApp.configure" Runner/AppDelegate.swift; then
            echo "âœ… Firebase configured in AppDelegate"
          else
            echo "âŒ Firebase not configured in AppDelegate!"
          fi
          
      - name: Flutter build iOS (Release)
        script: |
          echo "ðŸš€ Building iOS app with Firebase + OneSignal..."
          flutter build ios --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER \
            --verbose
            
      - name: iOS Code Signing & Archive
        script: |
          echo "ðŸ“¦ Creating iOS archive for TestFlight with automatic code signing..."
          cd ios
          
          # Setup automatic code signing
          echo "ðŸ” Setting up automatic code signing..."
          echo "Team ID: $APPLE_TEAM_ID"
          
          # Build archive with automatic code signing
          xcodebuild -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath build/Runner.xcarchive \
            archive \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM=$APPLE_TEAM_ID \
            PRODUCT_BUNDLE_IDENTIFIER=com.gavra013.gavraAndroid \
            -verbose
            
      - name: Export IPA for TestFlight
        script: |
          echo "ðŸ“± Exporting IPA for App Store Connect/TestFlight..."
          cd ios
          
          # Export IPA using TestFlight export options
          xcodebuild -exportArchive \
            -archivePath build/Runner.xcarchive \
            -exportPath build \
            -exportOptionsPlist ExportOptionsTestFlight.plist \
            -verbose
            
          # Verify IPA was created
          if [ -f build/Runner.ipa ]; then
            echo "âœ… IPA successfully created!"
            ls -la build/Runner.ipa
          else
            echo "âŒ IPA creation failed!"
            exit 1
          fi
          
    artifacts:
      - ios/build/Runner.ipa
      - ios/build/Runner.xcarchive
      - flutter_drive.log
      
    publishing:
      # ðŸš€ TestFlight automatski upload na App Store Connect
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        
        # TestFlight configuration
        submit_to_testflight: true
        submit_to_app_store: false      # Ne Å¡alje odmah na App Store review
      
      email:
        recipients:
          - gavra.bus@example.com
        notify:
          success: true
          failure: true

  # ðŸ¤– Android Workflow - Complete Firebase + OneSignal
  android-workflow:
    name: Gavra Bus Android Build (Firebase + OneSignal)
    max_build_duration: 60
    instance_type: linux_x2
    environment:
      flutter: stable
      vars:
        SKIP_FIREBASE: "false"
        ONESIGNAL_APP_ID: "4fd57af1-568a-45e0-a737-3b3918c4e92a"
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: develop
          include: true
          source: true
      tag_patterns:
        - pattern: 'v*'
          include: true
    scripts:
      - name: Verify Android configuration
        script: |
          echo "ðŸ”§ Verifying Android configuration..."
          
          if grep -q "ACCESS_FINE_LOCATION" android/app/src/main/AndroidManifest.xml; then
            echo "âœ… Location permissions configured"
          else
            echo "âŒ Location permissions missing!"
          fi
          
          if grep -q "onesignal_app_id" android/app/src/main/AndroidManifest.xml; then
            echo "âœ… OneSignal configured"
          else
            echo "âŒ OneSignal not configured!"
          fi
          
      - name: Get Flutter packages  
        script: |
          flutter clean
          flutter pub get
          
      - name: Flutter build APK (Release)
        script: |
          echo "ðŸš€ Building Android app with Firebase + OneSignal..."
          flutter build apk --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER
            
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
      - flutter_drive.log
      
    publishing:
      email:
        recipients:
          - gavra.bus@example.com
        notify:
          success: true
          failure: true
