name: 🤖 Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: 🤖 Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: ☕ Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: 🐦 Setup Flutter 3.24.0
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: 📥 Install Flutter Dependencies
        run: flutter pub get

      - name: 🔧 Fix Android Build Configuration
        run: |
          # Temporarily remove geolocator to fix build - RADIKALAN PRISTUP
          echo "=== REMOVING GEOLOCATOR TO FIX BUILD ==="

          # Remove geolocator from pubspec.yaml
          cp pubspec.yaml pubspec.yaml.backup
          sed -i '/geolocator:/d' pubspec.yaml
          sed -i '/permission_handler:/d' pubspec.yaml

          # Create gradle.properties with proper settings
          echo "android.compileSdkVersion=35" > android/gradle.properties
          echo "android.targetSdkVersion=35" >> android/gradle.properties
          echo "android.minSdkVersion=21" >> android/gradle.properties
          echo "android.buildToolsVersion=35.0.0" >> android/gradle.properties
          echo "org.gradle.jvmargs=-Xmx4G -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError" >> android/gradle.properties
          echo "android.useAndroidX=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties

          # Update compileSdk in android/app/build.gradle.kts (Kotlin DSL)
          sed -i 's/compileSdk = flutter.compileSdkVersion/compileSdk = 35/' android/app/build.gradle.kts || true
          sed -i 's/compileSdk flutter.compileSdkVersion/compileSdk = 35/' android/app/build.gradle.kts || true
          sed -i 's/compileSdkVersion = flutter.compileSdkVersion/compileSdk = 35/' android/app/build.gradle.kts || true

          # Replace flutter SDK versions with hardcoded values
          sed -i 's/minSdk = flutter.minSdkVersion/minSdk = 21/' android/app/build.gradle.kts || true
          sed -i 's/targetSdk = flutter.targetSdkVersion/targetSdk = 35/' android/app/build.gradle.kts || true
          sed -i 's/versionCode = flutter.versionCode/versionCode = 1/' android/app/build.gradle.kts || true
          sed -i 's/versionName = flutter.versionName/versionName = "1.0"/' android/app/build.gradle.kts || true

          # Show what we changed
          echo "=== MODIFIED pubspec.yaml (removed geolocator) ==="
          cat pubspec.yaml

          echo "=== Android build.gradle.kts content ==="
          cat android/app/build.gradle.kts || echo "File not found!"

          echo "=== Gradle properties ==="
          cat android/gradle.properties || echo "File not found!"

          # Clean and get dependencies again
          flutter clean
          flutter pub get

      - name: 🏗️ Build Android APK (Debug)
        run: flutter build apk --debug

      - name: 🏗️ Build Android APK (Release)
        run: flutter build apk --release

      - name: 📤 Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: gavra-android-debug
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 30

      - name: 📤 Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: gavra-android-release
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

      - name: ✅ Success Notification
        run: |
          echo "🎉 Android APK successfully built!"
          echo "📱 Debug APK: build/app/outputs/flutter-apk/app-debug.apk"
          echo "🚀 Release APK: build/app/outputs/flutter-apk/app-release.apk"
          echo "💾 Download artifacts from GitHub Actions page"
