name: 🎯 iOS TestFlight Automatic Build

on:
  workflow_dispatch:

jobs:
  ios:
    name: 🍎 Build & Upload iOS (Automatic)
    runs-on: macos-latest

    steps:
    - name: 📦 Checkout Repository
      uses: actions/checkout@v4

    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 🐦 Setup Flutter 3.24.0
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: 📥 Install Flutter Dependencies
      run: flutter pub get

    - name: 🍎 Clean & Build iOS
      run: |
        echo "🧹 Cleaning previous builds..."
        cd ios
        rm -rf Pods build ~/Library/Developer/Xcode/DerivedData/* || true
        pod deintegrate || true

        echo "📦 Installing CocoaPods..."
        pod install --repo-update --clean-install

        echo "🏗️ Building Flutter iOS..."
        cd ..
        flutter clean
        flutter pub get
        flutter build ios --release --no-codesign --verbose

    - name: 🏗️ Create iOS Archive with Automatic Signing
      run: |
        echo "📦 Creating iOS archive with automatic signing..."
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath Runner.xcarchive \
          CODE_SIGN_STYLE="Automatic" \
          DEVELOPMENT_TEAM="6CY9Q44KMQ" \
          -allowProvisioningUpdates \
          -allowProvisioningDeviceRegistration \
          archive

    - name: 📦 Export IPA with Automatic Signing
      run: |
        echo "📤 Exporting IPA for App Store distribution with automatic signing..."
        cd ios
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>6CY9Q44KMQ</string>
            <key>signingStyle</key>
            <string>automatic</string>
            <key>uploadSymbols</key>
            <true/>
            <key>uploadBitcode</key>
            <false/>
        </dict>
        </plist>
        EOF

        xcodebuild -exportArchive \
          -archivePath Runner.xcarchive \
          -exportPath export \
          -exportOptionsPlist ExportOptions.plist \
          -allowProvisioningUpdates

    - name: 🔑 Setup App Store Connect API Key
      env:
        API_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_API_KEY_BASE64 }}
        API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      run: |
        echo "🔑 Setting up App Store Connect API key..."

        # Create API key directory
        mkdir -p ~/private_keys

        # Decode and save API key
        echo "$API_KEY_BASE64" | base64 -d > ~/private_keys/AuthKey_$API_KEY_ID.p8

        echo "✅ API key saved to ~/private_keys/AuthKey_$API_KEY_ID.p8"

        # Set permissions
        chmod 600 ~/private_keys/AuthKey_$API_KEY_ID.p8

    - name: 🚀 Upload to TestFlight
      env:
        API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      run: |
        echo "🚀 Uploading to TestFlight using API key..."
        cd ios/export

        xcrun altool --upload-app \
          --type ios \
          --file *.ipa \
          --apiKey "$API_KEY_ID" \
          --apiIssuer "$ISSUER_ID" \
          --verbose

    - name: 🧹 Cleanup
      if: always()
      run: |
        echo "🧹 Cleaning up sensitive files..."
        rm -rf ~/private_keys || true

    - name: ✅ Success Notification
      run: |
        echo "🎉 iOS app successfully uploaded to TestFlight!"
        echo "📱 Check App Store Connect for processing status"
        echo "🔗 https://appstoreconnect.apple.com"
