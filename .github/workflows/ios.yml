name: iOS Build with Manual Signing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger

jobs:
  build_ios:
    name: Build iOS with Manual Signing
    runs-on: macos-13  # Use macOS 13 with iOS 17 support
    
    env:
      IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
      IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
      IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
        
    - name: Flutter doctor
      run: flutter doctor -v
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Setup Xcode
      run: |
        sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer || sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        xcodebuild -version
    
    - name: Setup App Store Connect API
      run: |
        echo "${{ secrets.APPSTORE_CONNECT_PRIVATE_KEY }}" | base64 --decode > AuthKey_F4P38UR78G.p8
        
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        
    - name: Setup Additional API Keys and Profiles
      run: |
        # Create App Store Connect API key file in multiple locations for reliability
        mkdir -p ~/private_keys
        echo "${{ secrets.APPSTORE_CONNECT_PRIVATE_KEY }}" | base64 --decode > ~/private_keys/AuthKey_F4P38UR78G.p8
        echo "${{ secrets.APPSTORE_CONNECT_PRIVATE_KEY }}" | base64 --decode > ios/AuthKey_F4P38UR78G.p8
        
        # Install provisioning profile only (no certificate import)
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/AppStore.mobileprovision
        
    - name: Build iOS App for TestFlight
      run: |
        # Set build number and name in Flutter
        flutter build ios --release --no-codesign \
          --build-name=1.0.${{ github.run_number }} \
          --build-number=${{ github.run_number }}
        
        # Use fastlane for both build and upload
        cd ios
        
        # Install fastlane
        gem install fastlane
        
        # Run our existing fastlane configuration with manual signing
        fastlane build_manual
          
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-ipa-${{ github.run_number }}
        path: ios/build/*.ipa
        retention-days: 30
    
    - name: Cleanup
      if: always()
      run: |
        rm -f ios/build/*.ipa || true
