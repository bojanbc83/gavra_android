name: 🚀 Build and Release Flutter APK

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  analyze:
    name: 🔍 Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📱 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.2'
          channel: 'stable'
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🔍 Analyze code
        run: flutter analyze
        continue-on-error: true

      - name: 🧪 Run tests (if any)
        run: flutter test --no-pub --coverage
        continue-on-error: true

  build-debug:
    name: 🔨 Build Debug APK
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📱 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.2'
          channel: 'stable'
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🔨 Build Debug APK
        run: flutter build apk --debug

      - name: 📤 Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: gavra-android-debug
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 30

  build-release:
    name: 🚀 Build Release APK
    runs-on: ubuntu-latest
    needs: analyze
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📱 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.2'
          channel: 'stable'
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🔧 Setup signing key
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/gavra-release-key.jks
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=gavra-release-key.jks" >> android/key.properties

      - name: 🚀 Build Release APK
        run: flutter build apk --release --no-shrink

      - name: 📊 APK Info
        run: |
          APK_PATH="build/app/outputs/flutter-apk/app-release.apk"
          APK_SIZE=$(stat -c%s "$APK_PATH" | numfmt --to=iec)
          echo "📱 APK Size: $APK_SIZE"
          echo "📂 APK Path: $APK_PATH"

      - name: 📤 Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: gavra-android-release
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 90

      - name: 🏷️ Create Release (on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          name: Gavra Android ${{ github.ref_name }}
          body: |
            🚀 **Gavra Android App - Release ${{ github.ref_name }}**
            
            ### 📱 What's Included:
            - ✅ Android APK (Release build)
            - ✅ Optimized for production
            - ✅ Tree-shaken icons for smaller size
            
            ### 📋 Installation:
            1. Download `app-release.apk` directly from this release
            2. Enable "Install from unknown sources" in Android settings
            3. Install the APK file
            
            ### 🔄 Auto-Update:
            The app will automatically check for updates and offer direct APK download.
            
            ### 🔄 Changes:
            See commit history for detailed changes since last release.
            
            **Built with Flutter 3.35.2** 📱
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: 📢 Build Notification
    runs-on: ubuntu-latest
    needs: [analyze, build-debug, build-release]
    if: always()
    steps:
      - name: 📊 Build Status
        run: |
          echo "🔍 Analysis: ${{ needs.analyze.result || 'skipped' }}"
          echo "🔨 Debug Build: ${{ needs.build-debug.result || 'skipped' }}"
          echo "🚀 Release Build: ${{ needs.build-release.result || 'skipped' }}"
          
          if [ "${{ needs.build-debug.result }}" = "success" ] && [ "${{ needs.build-release.result }}" = "success" ]; then
            echo "✅ All builds successful!"
          elif [ "${{ needs.build-debug.result }}" = "success" ]; then
            echo "✅ Debug build successful!"
          else
            echo "❌ Some builds failed"
            exit 1
          fi
