name: 🏪 Deploy to Google Play Store

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      track:
        description: "Play Store track"
        required: true
        default: "internal"
        type: choice
        options:
          - internal
          - alpha
          - beta
          - production
      rollout_percentage:
        description: "Rollout percentage (production only)"
        required: false
        default: "5"
        type: string

jobs:
  deploy-play-store:
    name: 🚀 Deploy to Play Store
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: 📱 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.2"
          channel: "stable"
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🔧 Setup signing key
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/gavra-release-key.jks
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=gavra-release-key.jks" >> android/key.properties

      - name: 🏗️ Build App Bundle
        run: flutter build appbundle --release

      - name: 🔍 Setup Play Store Service Account
        run: |
          echo "${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}" | base64 -d > play-store-service-account.json

      - name: 🚀 Deploy to Play Store
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
          packageName: ${{ secrets.PLAY_STORE_PACKAGE_NAME }}
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: ${{ github.event.inputs.track || 'internal' }}
          status: completed
          inAppUpdatePriority: 2
          whatsNewDirectory: distribution/whatsnew
          mappingFile: build/app/outputs/mapping/release/mapping.txt

      - name: 📝 Create release notes
        run: |
          mkdir -p distribution/whatsnew
          echo "🚀 Nova verzija Gavra Android aplikacije sa glassmorphism dizajnom i poboljšanjima performansi." > distribution/whatsnew/whatsnew-sr-RS.txt
          echo "🎨 Kompletno redizajnirani korisnički interfejs sa modernim vizuelnim efektima." >> distribution/whatsnew/whatsnew-sr-RS.txt
