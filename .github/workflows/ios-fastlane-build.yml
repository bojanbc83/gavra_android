name: iOS Build (Fastlane Only)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-ios-fastlane:
    runs-on: macos-13
    timeout-minutes: 30
    
    env:
      FLUTTER_VERSION: '3.24.5'
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Setup Xcode
      run: |
        echo "üì± Setting up Xcode..."
        if [ -d "/Applications/Xcode.app" ]; then
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer  
          echo "‚úÖ Using default Xcode"
        else
          echo "‚ùå No Xcode found!"
          exit 1
        fi
        xcode-select -p
        xcodebuild -version
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Generate iOS configuration
      run: |
        echo "üîß Generating iOS configuration files..."
        flutter build ios --config-only
        echo "‚úÖ iOS configuration generated"
        ls -la ios/Flutter/
      
    - name: Clean previous builds (keep Flutter config)
      run: |
        cd ios
        rm -rf Pods Podfile.lock build/
      
    - name: Install Ruby and Bundler
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        working-directory: ios
        
    - name: Install CocoaPods
      run: |
        cd ios
        pod install --verbose
        
    - name: Setup App Store Connect API Key
      env:
        APPLE_API_KEY_BASE64: ${{ secrets.APPSTORE_CONNECT_PRIVATE_KEY }}
      run: |
        echo "üîë Setting up App Store Connect API key..."
        if [[ -n "$APPLE_API_KEY_BASE64" ]]; then
          echo "$APPLE_API_KEY_BASE64" | base64 --decode > AuthKey_F4P3BUR78G.p8
          echo "‚úÖ App Store Connect API key created"
          ls -la AuthKey_F4P3BUR78G.p8
        else
          echo "‚ö†Ô∏è No App Store Connect API key found"
        fi
        
    - name: Build iOS with Fastlane
      env:
        IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
        IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
        IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
      run: |
        cd ios
        echo "üöÄ Starting Fastlane build..."
        
        # Validate secrets first
        echo "üîç Checking environment variables..."
        echo "Certificate present: $([[ -n "$IOS_CERTIFICATE_BASE64" ]] && echo "‚úÖ YES" || echo "‚ùå NO")"
        echo "Password present: $([[ -n "$IOS_CERTIFICATE_PASSWORD" ]] && echo "‚úÖ YES" || echo "‚ùå NO")"
        echo "Profile present: $([[ -n "$IOS_PROVISIONING_PROFILE_BASE64" ]] && echo "‚úÖ YES" || echo "‚ùå NO")"
        
        # Run Fastlane with timeout
        timeout 20m bundle exec fastlane ios build_cloud || {
          echo "‚ùå Fastlane build failed or timed out"
          echo "üìÅ Checking what was created..."
          ls -la . || true
          ls -la ../ || true
          exit 1
        }
        
        echo "‚úÖ Fastlane build completed!"
        
        # Check for IPA files
        echo "üì¶ Looking for IPA files..."
        find . -name "*.ipa" -exec ls -la {} \;
        
    - name: Upload to TestFlight (conditional)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        APPLE_API_KEY_BASE64: ${{ secrets.APPSTORE_CONNECT_PRIVATE_KEY }}
      run: |
        cd ios
        echo "üöÄ Uploading to TestFlight..."
        
        # Check if we have an IPA file first
        if ls *.ipa 1> /dev/null 2>&1; then
          echo "‚úÖ IPA file found, proceeding with upload..."
          timeout 10m bundle exec fastlane ios upload_testflight || {
            echo "‚ùå TestFlight upload failed or timed out"
            exit 1
          }
        else
          echo "‚ùå No IPA file found, skipping TestFlight upload"
          ls -la .
          exit 1
        fi
        
    - name: Upload build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ios-fastlane-build-artifacts
        path: |
          ios/*.ipa
          ios/fastlane/report.xml
          ios/fastlane/logs/
        retention-days: 30
