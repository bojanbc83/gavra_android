default_platform(:ios)

platform :ios do
  desc "Build iOS app with manual signing"
  lane :build_manual do
    puts "🔍 Environment Variables Check:"
    puts "IOS_CERTIFICATE_BASE64 present: #{!ENV['IOS_CERTIFICATE_BASE64'].nil?}"
    puts "IOS_CERTIFICATE_PASSWORD present: #{!ENV['IOS_CERTIFICATE_PASSWORD'].nil?}"
    puts "IOS_PROVISIONING_PROFILE_BASE64 present: #{!ENV['IOS_PROVISIONING_PROFILE_BASE64'].nil?}"
    
    # Set Xcode path explicitly
    xcode_select("/Applications/Xcode-16.4.app")
    
    # Create keychain for code signing
    create_keychain(
      name: "ios-build.keychain",
      password: "",
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
    )
    
    # Install certificate from base64
    certificate_path = File.expand_path("../ios_distribution.p12")
    puts "Creating certificate at: #{certificate_path}"
    
    begin
      # Use GitHub Actions environment variable
      certificate_base64 = ENV['IOS_CERTIFICATE_BASE64']
      File.write(certificate_path, Base64.decode64(certificate_base64))
      puts "✅ Certificate file created: #{File.size(certificate_path)} bytes"
    rescue => e
      puts "❌ Error creating certificate: #{e.message}"
      raise e
    end

    # Get password from environment variable
    cert_password = ENV["IOS_CERTIFICATE_PASSWORD"] || "gavra123"
    puts "🔨 Using certificate password from environment: #{cert_password.empty? ? 'EMPTY' : 'SET'}"
    
    import_certificate(
      certificate_path: certificate_path,
      certificate_password: cert_password,
      keychain_name: "ios-build.keychain",
      keychain_password: ""
    )
    
    # Install provisioning profile from base64
    profile_path = File.expand_path("../app_store.mobileprovision")
    puts "Creating provisioning profile at: #{profile_path}"
    
    begin
      File.write(profile_path, Base64.decode64(ENV['IOS_PROVISIONING_PROFILE_BASE64']))
      puts "✅ Provisioning profile created: #{File.size(profile_path)} bytes"
    rescue => e
      puts "❌ Error creating provisioning profile: #{e.message}"
      raise e
    end
    
    install_provisioning_profile(path: profile_path)
    
    # Build the app
    puts "🔨 Starting iOS build process..."
    workspace_path = File.expand_path("../Runner.xcworkspace")
    puts "Workspace path: #{workspace_path}"
    puts "Workspace exists: #{File.exist?(workspace_path)}"
    
    begin
      build_app(
        workspace: workspace_path,
        scheme: "Runner",
        configuration: "Release",
        export_method: "app-store",
        codesigning_identity: "iPhone Distribution",
        export_options: {
          method: "app-store",
          teamID: "6CY9Q44KMQ",
          signingStyle: "manual",
          provisioningProfiles: {
            "com.gavra013.gavraAndroid" => "Gavra 013 App Store Profile"
          }
        }
      )
      puts "✅ Build completed successfully!"
      
      # Upload to TestFlight
      puts "🚀 Uploading to TestFlight..."
      pilot(
        api_key_path: "../AuthKey_F4P38UR78G.p8",
        api_key: "F4P38UR78G", 
        issuer_id: "d8b50e72-6330-401d-9aef-4ead356405ca",
        ipa: "./build/Runner.ipa",
        skip_waiting_for_build_processing: true,
        skip_submission: true,
        team_id: "6CY9Q44KMQ"
      )
      puts "✅ TestFlight upload completed!"
      
    rescue => e
      puts "❌ Build failed: #{e.message}"
      puts "❌ Error details: #{e.backtrace.first(5).join('\n')}"
      raise e
    end
  end
end
