default_platform(:ios)

platform :ios do
  desc "Build iOS app with manual signing"
  lane :build_manual do
    # Change to iOS directory
    Dir.chdir("../") # Go from fastlane/ to ios/
    puts "Changed working directory to: #{Dir.pwd}"
    
    # Create keychain for code signing
    create_keychain(
      name: "ios-build.keychain",
      password: "",
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
    )
    
    # Install certificate from base64
    certificate_path = File.expand_path("ios_distribution.p12")
    puts "Creating certificate at: #{certificate_path}"
    
    begin
      File.write(certificate_path, Base64.decode64(ENV['CM_CERTIFICATE']))
      puts "✅ Certificate file created: #{File.size(certificate_path)} bytes"
    rescue => e
      puts "❌ Error creating certificate: #{e.message}"
      raise e
    end
    
    import_certificate(
      certificate_path: certificate_path,
      certificate_password: ENV["CM_CERTIFICATE_PASSWORD"] || "123456",
      keychain_name: "ios-build.keychain",
      keychain_password: ""
    )
    
    # Install provisioning profile from base64
    profile_path = File.expand_path("app_store.mobileprovision")
    puts "Creating provisioning profile at: #{profile_path}"
    
    begin
      File.write(profile_path, Base64.decode64(ENV['CM_PROVISIONING_PROFILE']))
      puts "✅ Provisioning profile created: #{File.size(profile_path)} bytes"
    rescue => e
      puts "❌ Error creating provisioning profile: #{e.message}"
      raise e
    end
    
    install_provisioning_profile(path: profile_path)
    
    # Build the app
    puts "🔨 Starting iOS build process..."
    puts "Working directory: #{Dir.pwd}"
    puts "Workspace path: #{File.expand_path('Runner.xcworkspace')}"
    puts "Workspace exists: #{File.exist?('Runner.xcworkspace')}"
    
    begin
      build_app(
        workspace: File.expand_path("Runner.xcworkspace"),
        scheme: "Runner",
        configuration: "Release",
        export_method: "app-store",
        codesigning_identity: "iPhone Distribution",
        export_options: {
          method: "app-store",
          teamID: "6CY9Q44KMQ",
          signingStyle: "manual",
          provisioningProfiles: {
            "com.gavra.gavra013" => "Gavra 013 App Store Profile"
          }
        }
      )
      puts "✅ Build completed successfully!"
    rescue => e
      puts "❌ Build failed: #{e.message}"
      puts "❌ Error details: #{e.backtrace.first(5).join('\n')}"
      raise e
    end
  end
end
