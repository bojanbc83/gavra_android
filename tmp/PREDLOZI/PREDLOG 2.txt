




1 MESECNI PUTNICI
- koliko su putovanja imali po mesecu
- koliko su otkazivanja putovanja imali po mesecu
- vreme i datum otkazivanja voznje
- koliko puta su platili po mesecu 
- koliki je ukupan iznos placanja po mesecu 
- kome su platili 
- kada su platili
- koji su radni dani putnika
- koje je radno vreme 
- adresa polaska bela crkva
- adresa polaska vrsac
- broj telefona
- tip putnika (radnik-ucenik)
- gde su zaposleni ako je radnik
- koja skola je u pitanju za ucenika
(PS NEKI RADE PRIMER NEDELJNI 6-14, NEKI MENJAJU SVAKE NEDELJE RADNO VREME TO BI JA TREBAO RUCNO PRIMER PONEDELJAK 5-13 UTORAK 12-19 SREDA 9-17 i tako dalje)

2 DNEVNI PUTNICI
ovde ne znam sta bi mi trebalo iskreno predlozi mi ti

3 VOZACI
- Koliko dodatih putnika 
- Koliko pokupljenih 
- Koliko otkazanih
- Koliko sitnog novca za kusur
- Koliko imaju pazara (dnevnog/nedeljnog/mesecnog/godisnjeg)
- kilometraza
- Koliko naplacenih mesecnih karata
ChatGPT said:
Razumem, hoćeš da napraviš sistem statistike u Supabase tabelama koji obuhvata mesečne putnike, dnevne putnike i vozače, sa svim detaljima koje si naveo. Evo ti predlog kako da organizuješ baze tako da možeš lako da pratiš sve što ti treba:

1. Mesečni putnici (mesecni_putnici)
Tabela sa svim osnovnim podacima i praćenjem aktivnosti.

Kolone:

id (PK, auto increment)

ime (text)

telefon (text)

tip (enum: radnik, učenik)

adresa_bc (text)

adresa_vs (text)

firma (text, NULL ako je učenik)

skola (text, NULL ako je radnik)

radni_dani (jsonb, npr. ["pon", "uto", "sre"])

radno_vreme (jsonb, npr. {"pon": "5-13", "uto": "12-19"})

Posebna tabela za statistiku putovanja: mesecni_statistika

id (PK)

putnik_id (FK → mesecni_putnici.id)

datum_voznje (date)

otkazano (boolean)

vreme_otkazivanja (timestamp, NULL ako nije otkazano)

placeno (boolean)

iznos (numeric)

datum_placanja (timestamp)

naplatio_vozac (text)

👉 Ovako možeš da pratiš po mesecu:

COUNT(putnik_id) → broj vožnji

COUNT(otkazano) → broj otkazivanja

SUM(iznos) → ukupan prihod od tog putnika

2. Dnevni putnici (dnevni_putnici)
Ovo su oni što kupe kartu na licu mesta. Njih ne moraš da pamtiš dugoročno, ali je korisno imati istoriju.

Kolone:

id (PK)

ime (text, može i NULL ako nećeš unositi svima)

telefon (text, opcionalno)

grad_polaska (enum: Bela Crkva, Vršac)

polazak (time)

dan (date)

placeno (boolean)

iznos (numeric)

naplatio_vozac (text)

👉 Statistika:

koliko je dnevnih po danu, nedelji, mesecu

ukupan prihod od njih

raspodela po vozačima

3. Vozači (vozaci)
Tabela sa osnovnim podacima o vozaču.

Kolone:

id (PK)

ime (text)

telefon (text)

sitni_novac (numeric, koliko nosi za kusur)

Statistika vozača → tabela vozac_statistika

id (PK)

vozac_id (FK → vozaci.id)

datum (date)

broj_dodatih_putnika (int)

broj_pokupljenih (int)

broj_otkazanih (int)

pazar (numeric)

kilometraza (numeric)

naplacene_mesecne_karte (int)

👉 Ovako lako vidiš za svakog vozača posebno:

koliko je dodao putn
1. Mesečni putnici
-- Glavna tabela za mesečne putnike
create table if not exists mesecni_putnici (
    id bigserial primary key,
    ime text not null,
    telefon text,
    tip text check (tip in ('radnik', 'ucenik')) not null,
    adresa_bc text,
    adresa_vs text,
    firma text,
    skola text,
    radni_dani jsonb,     -- primer: ["pon", "uto", "sre"]
    radno_vreme jsonb     -- primer: {"pon": "5-13", "uto": "12-19"}
);

-- Statistika za mesečne putnike
create table if not exists mesecni_statistika (
    id bigserial primary key,
    putnik_id bigint references mesecni_putnici(id) on delete cascade,
    datum_voznje date not null,
    otkazano boolean default false,
    vreme_otkazivanja timestamp,
    placeno boolean default false,
    iznos numeric(10,2),
    datum_placanja timestamp,
    naplatio_vozac text
);
2. Dnevni putnici
create table if not exists dnevni_putnici (
    id bigserial primary key,
    ime text,
    telefon text,
    grad_polaska text check (grad_polaska in ('Bela Crkva', 'Vrsac')) not null,
    polazak time not null,
    dan date not null,
    placeno boolean default false,
    iznos numeric(10,2),
    naplatio_vozac text
);
3. Vozači
-- Glavna tabela vozača
create table if not exists vozaci (
    id bigserial primary key,
    ime text not null,
    telefon text,
    sitni_novac numeric(10,2) default 0
);

-- Statistika vozača po danima
create table if not exists vozac_statistika (
    id bigserial primary key,
    vozac_id bigint references vozaci(id) on delete cascade,
    datum date not null,
    broj_dodatih_putnika int default 0,
    broj_pokupljenih int default 0,
    broj_otkazanih int default 0,
    pazar numeric(10,2) default 0,
    kilometraza numeric(10,2) default 0,
    naplacene_mesecne_karte int default 0
);
4. Dodatno – Korisni indeksi
(Da bi upiti bili brži, pogotovo za statistiku po mesecima i vozačima.)

create index if not exists idx_mesecni_statistika_datum on mesecni_statistika(datum_voznje);
create index if not exists idx_dnevni_putnici_dan on dnevni_putnici(dan);
create index if not exists idx_vozac_statistika_datum on vozac_statistika(datum);

